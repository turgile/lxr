# Configure options for the generic language support

{
 # Options to always feed to ectags
 'ectagsopts' => ["--c-types=+px", "--eiffel-types=+l", 
				  "--fortran-types=+L",],

 # How to map a language name to the ectags language-force name
 'eclangnamemapping' => {'C' => 'c',
						 'C++' => 'c++',
						 'Python' => 'python',
						},
								
 
 # lang map specifies info for each language
 # what the reserved words & comment chars are
 'langmap' => {
			   'C' => {
					   'reserved' => ['asm','auto', 'break', 'case', 'char', 
									  'continue', 'default', 'do', 'double', 
									  'else', 'enum', 'extern', 'float', 'for', 
									  'fortran', 'goto', 'if', 'int', 'long', 
									  'register', 'return', 'short'],
					   
					   'spec' => ['atom',     '\\\\.',	    '',
								  'comment',  '/\*',		'\*/',
								  'comment',  '//',		    "\$",
								  'string',   '"',		    '"',
								  'string',   "'",		    "'",
								  'include',  '#include',	"\$"],
					  },
		
			   'C++' => {
						 'reserved' => ['and', 'and_eq', 'asm', 'auto', 'bitand',
										'bitor', 'bool', 'break', 'case', 'catch',
										'char', 'class', 'const', 'const_cast','continue',
										'default', 'delete', 'do', 'double', 'dynamic_cast',
										'else', 'enum', 'explicit', 'export', 'extern',
										'false', 'float', 'for', 'friend', 'goto', 'if',
										'inline', 'int', 'long', 'mutable', 'namespace',
										'new', 'not', 'not_eq', 'operator', 'or', 'or_eq',
										'private', 'protected', 'public', 'register',
										'reinterpret_cast', 'return', 'short', 'signed',
										'sizeof', 'static', 'static_cast','struct',
										'switch', 'template','this',
										'throw', 'true','try',
										'typedef', 'typeid','typename',
										'union', 'unsigned','using',
										'virtual', 'void','volatile',
										'wchar_t', 'while','xor',
										'xor_eq'],
						},
		
			   'Java' => {
						  'reserved' => ['break', 'case', 'continue', 'default', 'do', 'else',
										 'for', 'goto', 'if', 'return', 'static',
										 'switch', 'void', 'volatile', 'while', 'public',
										 'class', 'final', 'private', 'protected',
										 'synchronized', 'package', 'import', 'boolean',
										 'byte', 'new', 'abstract', 'extends',
										 'implements', 'interface', 'throws',
										 'instanceof', 'super', 'this', 'native', 'null'],
						  'spec' => ['atom'	  => ('\\\\.',	''),
									 'comment'  => ('/\*',		'\*/'),
									 'comment'  => ('//',		"\$"),
									 'string'	  => ('"',		'"'),
									 'string'	  => ("'",		"'"),
									 'include'  => ('#include',	"\$")],
						 },
			   
			   'Fortran' => {
							 'reserved' => [],
							},
		
			   'Pascal' => {
							'reserved' => [],
						   },
		
			   'COBOL' => { 
						   'reserved' => [],
						  },
			   'Perl' => {
						  'reserved' => [
										 'sub',
										 ],
						 },
			   'Python' => {
							'spec' => ['comment'	=> ('#',		"\$"),
									   'string'	=> ('"',		'"'),
									   'string'	=> ("'",		"'"),
									   'atom'		=> ('\\\\.',	'')],
						   }
			  }
}
