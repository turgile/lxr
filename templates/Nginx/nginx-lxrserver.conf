#
#	LXR nginx server configuration
#
#-

		#######################################
		# server - defines general parameters #
		#######################################
#
# IMPORTANT!
#	If LXR is offered as part of an existing server defined in another
#	configuration file, DO NOT use this one.
#	Instead, extract the location paragraphs and transfer them into
#	that other configuration file.
#
#	Servers are considered identical (and thus conflict) if they
#	have the same name and operate on the same port.

server {
#@IF	'H' ne "%_routing%"
	listen       %port%;		# server port
#@	ARRAY	portaliases,P
#@		ON	none
#	Add other listen directives if your LXR server answers on multiple ports
#@		ENDON
#@		ON	prolog
#	Other ports for this server
#	NOTE: remove duplicates since they cause trouble
#@		ENDON
	listen       %P%;
#@	ENDA
#@ENDIF
#@PASS2 here_ports
#@	IF	'H' eq "%_routing%"
#	listen XX;
#	where XX = port number for host %hostname%
#@	ENDIF
#@ENDP2

#@IF	'H' ne "%_routing%" && 'P' ne "%_routing%"
#@	ARRAY	hostaliases,H
#@		ON none
	server_name  %hostname%;	# list of names for this server
# In case of aliases, replace the previous directive with
#	server_name first.host.name first.alias second.alias ... ;
#@		ENDON
#@		ON	prolog
	server_name  %hostname%
#@		ENDON
	             %H%
#@		ON	epilog
	;
#@		ENDON
#@	ENDA
#@ENDIF
#@PASS2	here_hosts
#@	IF	'H' eq "%_routing%"
	server_name  %hostname%
	# List here the aliases for this host name
	;
#@	ELSEIF	'P' eq "%_routing%"
	server_name		%treeid%.%hostname%
#@		ARRAY	hostaliases,H
#@			ON none
	# List here the aliases for this host name
#@			ENDON
			%treeid%.%H%
#@		ENDA
	;
#@	ENDIF
#@ENDP2

	# If SSI (server-side includes) are needed,
	# uncomment the following line.
	# But, BEWARE, #include semantics is different from Apache or lighttpd
#	ssi on;

		# locations tell how to route URLs #
		#==================================#

#	The following images are not needed by LXR, but included just in case
#	you want to display them in header or footer.

    location ~ nginx-logo.png$ {
        alias   /usr/share/nginx/html/nginx-logo.png;
    }
    location ~ poweredby.png$ {
        alias   /usr/share/nginx/html/poweredby.png;
    }

#	The error page definitions are copied from nginx's default.conf.
#	They do use the previous images.
#	Normally, not needed by LXR.

    error_page  404				404.html;
    location = /404.html {
        root   /usr/share/nginx/html;
    }
    error_page  500 502 503 504	/50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

# ============================================================
#
#		# LXR scripts activation #
#		#========================#
#
#	This location directive manages both the virtual root and tree
#	(in multiple trees context) identifications.
#	The built-in 'embedded' policy considers tree designation is put
#	after the virtual root in the URL as (remember that location
#	omits the "scheme", hostname and port):
#
#	/virtual_root/tree/script/arguments   for "embedded" case
#	/virtual_root/script/arguments        other cases
#
#	Pattern matching is used to isolate the various components:
#	^     virtrootbase /   [^/]+  /  (.*)    $
#	start ----root----   treename   URLtail end
#	or:
#	^     virtrootbase /  (.*)    $
#	start ----root----   URLtail end
#
#	If you don't use the built-in policy, you must adapt the
#	regular expression to your needs.

#@IF		'S' ne "%_routing%" && 'E' ne "%_routing%"
	location ~ ^%virtrootbase%/(.*)$
#@ELSEIF	'E' eq "%_routing%"
#@	IF	'c' eq "%_virtrootpolicy%"
#@		REMIND Remember to adapt the tree designation for nginx
#@	ENDIF
	location ~ ^%virtrootbase%/[^/]+/(.*)$
#@ENDIF
#@IF	'S' ne "%_routing%"
	{
#
#	Next, we must handle differently "ordinary" files (like stylesheets
#	or images) and scripts files.
# 	This alias directive serves the ordinary files.
#	Note we don't use root directive because we must replace the head
#	part of the path.
		alias %LXRroot%/$1;

#	Script files will be handled by FastCGI.
#	Scripts are first identified by a more specific regular expression
#	whose head is similar to the previous one. See above for its structure
#	and the warning about the multiple trees policy.

#@	IF	'E' ne "%_routing%"
		location ~ ^(%virtrootbase%/)(diff|ident|perf|search|showconfig|source)
#@	ELSE
		location ~ ^(%virtrootbase%/[^/]+/)(diff|ident|search|perf|showconfig|source)
#@	ENDIF
#@	ADD Nginx/nginx-fastcgi.conf.part
	}
#@ENDIF	!'S'
#@PASS2 here_sections
#@	IF	'S' eq "%_routing%"
	location ~ ^(%virtroot%/)(.*)$
	{
#
#	Next, we must handle differently "ordinary" files (like stylesheets
#	or images) and scripts files.
# 	This alias directive serves the ordinary files.
#	Note we don't use root directive because we must replace the head
#	part of the path.
		alias %LXRroot%/$1;

#	Script files will be handled by FastCGI.
#	Scripts are first identified by a more specific regular expression
#	whose head is similar to the previous one. See above for its structure.

		location ~ ^(%virtroot%/)(diff|ident|search|perf|showconfig|source)
#@		ADD Nginx/nginx-fastcgi.conf.part
	}
#@	ENDIF
#@ENDP2
#
# ============================================================

#	Close server definition
}
