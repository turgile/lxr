# -*- mode: perl -*-
# Configuration file
#
#	$Id: lxrkernel.conf,v 1.3 2012/04/19 07:39:37 ajlittoz Exp $
#

# This is a specifically prepared lxr.conf template for kernel browsing.
# Some sections are incomplete. Refer to the "standard" lxr.conf for
# full comments or to the user's manual.

#	It is meant to be preprocessed by script initial-config.sh:
# ./scripts/initial-config.sh --add lxrkernel.conf
#	The preconfigured result is stored in directory lxrconf.d/

# See also the important NOTE in the "version selection subsection".

# Merging the kernel tree configuration section into lxr.conf to display
# the Linux kernel and other source trees is left as an exercise.
# Hint: copy and paste the tree section and ensure at least the kernel
# ----| uses the buttons-and-menus interface, otherwise your screen
#     | will be seriously cluttered and ugly.

# To use this file 'as is', move it to its final location with:
# cp lxrconf.d/lxrkernel.conf lxr.conf
# REMINDER: LXR expects its configuration file to be name lxr.conf

# Have a pleasant navigation -- ajl 2012/03/29

(
		################################
		# Global configuration section #
		################################

	{
		# Auxiliary tools subsection #
		#============================#

		# Place where lxr can write temporary files
	  'tmpdir' => '/tmp'

		# Define this OR the swish-e variable depending which search engine you want to use.
		# Path to glimpse executables.
		# e.g.: , 'glimpsebin'   => '/usr/local/bin/glimpse'
	, 'glimpsebin'   => '%glimpse%'
	, 'glimpseindex' => '%glimpseindex%'
		# Location of SWISH-E binary
		# e.g.: , 'swishbin' => '/usr/local/bin/swish-e'
	, 'swishbin' => '%swish%'
		# Location of the SWISH-E.conf file
	, 'swishconf' => '%LXRroot%/templates/swish-e.conf'

		# Path to Exuberant Ctags executable
	, 'ectagsbin' => '%ctags%'
		# Location of the ectags.conf file
	, 'ectagsconf' => '%LXRroot%/templates/ectags.conf'

		# Paths for CVS module
	, 'cvspath' => '/bin:/usr/local/bin:/usr/bin:/usr/sbin'

		# Computer DNS names subsection #
		#================================
	, 'host_names' =>	[ '//localhost'
						, 'http://192.168.1.1'
						, 'http://mycomputer.outside.domain:12345'
						]

		# HTML subsection #
		#=================#

		# All paths in this subsection are relative to LXR root directory

		# Templates used for headers and footers
	, 'htmlfatal'		=> 'templates/html/html-fatal.html'
	, 'htmlhead'		=> 'templates/html/html-head-btn.html'
	, 'htmltail'		=> 'templates/html/html-tail.html'
	, 'htmldir'			=> 'templates/html/html-dir.html'
	, 'htmlident'		=> 'templates/html/html-ident.html'
	, 'htmlsearch'		=> 'templates/html/html-search-glimpse.html'
	, 'htmlconfig'		=> 'templates/html/html-config.html'

		# htmlhead and htmltail can be customised for the various
		# LXR operations. Just replace html by source (listing file),
		# sourcedir (displaying directory), diff (difference markup),
		# ident (identifier search), search (free-text search)
		# as below (which changes nothing):
#	, 'sourcehead'		=> 'templates/html/html-head.html'
#	, 'sourcedirhead'	=> 'templates/html/html-head.html'

		# showconfig script is a bit special since "version" has
		# no meaning for it. Better to wipe out the 'variables' selection
		# links with an adequate header:
	, 'showconfighead'		=> 'templates/html/config-head-btn-smaller.html'

		# Default character width of left version (for diff)
	, 'diffleftwidth'	=> 50

		# Default identifier search constraint (for ident)
#	, 'identdefonly'	=> 1

		# CSS style sheet
	, 'stylesheet'		=> '/templates/html/lxr.css'
#	, 'alternate_stylesheet' => [ 'lxrconf.d/another.css' ]

		# Default character encoding
	, 'encoding'	=> 'utf-8'

		# File management subsection #
		#============================#

		# Which extensions to treat as images when browsing.  If a file is an image,
		# it is displayed.
	, 'graphicfile' =>
		'bitmap|bmp|gif|icon?|jp2|jpe?g|pjpe?g|png|svg|tiff?|xbm|xpm'

		# Which file extensions are associated with which icon
		# Below is an example using 'Oxygen' theme available with KDE
		# small-icons/ is a symbolic link to
		#		 /usr/share/icons/oxygen/22x22/mimetypes/
		# (This location is valid for Fedora distributions,
		# check for others)
# 	, 'iconfolder' => 'small-icons/'
		# Don't forget the final / above.
# 	, 'icons' =>
# 		{	'c|pc'				=> 'text-x-csrc.png'
# 		,	'h|hh'				=> 'text-x-chdr.png'
# 		,	'c\+\+|cc|cpp|cxx'	=> 'text-x-c++src.png'
# 		,	'hpp|hxx|h\+\+'		=> 'text-x-c++hdr.png'
# 		,	'java'				=> 'text-x-java.png'
# 		,	'js'				=> 'application-x-javascript.png'
# 		,	'pl|pm|perl'		=> 'application-x-perl.png'
# 		,	'php|php3|phtml'	=> 'application-x-php.png'
# 		,	'py|python'			=> 'text-x-python.png'
# 		,	'sh|bsh|bash|ksh|zsh' => 'text-x-script.png'
# 		,	's?html?'			=> 'text-html.png'
# 		,	'css'				=> 'text-css.png'
# 		,	'pdf'				=> 'application-pdf.png'
# 		,	'txt'				=> 'text-plain.png'
# 		,	'p|pas'				=> 'text-x-pascal.png'
# 		,	'patch'				=> 'text-x-patch.png'
# 		,	'sql'				=> 'text-x-sql.png'
# 		,	'rb'				=> 'application-x-ruby.png'
# 		,	'ui'				=> 'text-xml.png'
# 		,	'.*\~'				=> 'application-x-trash'
# 		}
# 	, 'graphicicon' => 'image-x-generic.png'
# 	, 'defaulticon' => 'unknown.png'
# 	, 'diricon' => 'inode-directory.png'

		# How to map files to languages
	, 'filetypeconf' => '%LXRroot%/templates/filetype.conf'

		# Location of the Generic.pm config file
	, 'genericconf' => '%LXRroot%/lib/LXR/Lang/generic.conf'

		  # "Common factor" subsection #
		  #============================#

		# In case your LXR installation controls several trees,
		# put here what you consider common parameters between
		# your source trees.
		# A parameter is "common" if its value must be simultaneously
		# adjusted in every tree.

		# Pattern for extracting tree name from URL, since all
		# trees are usually served from the same physical server.
#	, 'treeextract' => '([^/]*)/[^/]*$'

		# User name and password for DB access are usually the same,
		# even if the database name is tree-specific.
	, 'dbpass'		=> 'lxr'
	, 'dbuser'		=> 'lxr'
		# Table prefix (parameter dbprefix) is also a common parameter
		# unless you stuff all tree data in a single database.
		# It has a default hard-coded value:
#	, 'dbprefix'	=> 'lxr_'
	}

		###############################
		# Tree configuration sections #
		###############################

,	{

		# Server configuration subsection #
		#=================================#

	  'virtroot'    => '/kernel'   # The bit after the //hostname

		# Title for this tree to display in page header area
		# if you aren't satisfied with the default
#	, 'caption' => 'Linux'

		# a link of the form (prefix)($filepath)(postfix) is generated when viewing a file
		#   example for cvsweb:
#	, 'cvswebprefix' => 'http://cvs.myhost.com/cgi-bin/cvsweb.cgi'
#	, 'cvswebpostfix' => '?cvsroot=rootname'
		#   example for viewcvs:
#	, 'cvswebprefix' => 'http://cvs.myhost.com/cgi-bin/viewcvs.cgi/myroot'
#	, 'cvswebpostfix' => ''

		# Tree location subsection #
		#==========================#

		# sourceroot - where to get the source files from

		# For ordinary directories, this specifies a directory which has each version as a
		# subdirectory e.g.
		#  indexed-src/version1/...
		#  indexed-src/version2/...
		# The names of the version directories must match the values for the Version
		# variable (see the version selection subsection).
	, 'sourceroot' => '/home/source/kernel'

		# Alternatively, this can specify a CVS repository by setting the value to "cvs:"
		# followed by the path to the repository.  Note this must be file accessible - remote
		# server access does NOT work.
#	, 'sourceroot'	=> 'cvs:/home/source/linuxCVS'

		# The string to display as the base part of every path in the tree
	, 'sourcerootname' => '$v'

		  # Version selection subsection #
		  #==============================#

	, 'variables' =>

			# Define various variables to configure #include path
			# remapping.
			# 'range' file lists are initialised by kernel-vars-grab.sh
			# script to run before the lxr.conf configuration step.

			# NOTE:	the filenames below are written with the default
			# ----|	suffix (_list.txt) used in script kernel-vars-grab.sh.
			#     |	If you launched the script with a custom suffix,
			#     |	you must manually make the adjustment.

		{ 'v' =>
			{ 'name' => 'Version'
			, 'range' => [ readfile('lxrconf.d/version_list.txt') ]
				# The default version to display
			}
		, 'a' =>
			{ 'name'  => 'Architecture'
			, 'range' => [ readfile('lxrconf.d/arch_list.txt') ]
			, 'default' => 'x86'
			}
		, 'arm_mach' =>
			{ 'name'  => 'ARM machine'
			, 'when'  => '"$a" eq "arm"'
			, 'range' => [ readfile('lxrconf.d/arm_mach_list.txt') ]
			}
		, 'arm_plat' =>
			{ 'name'  => 'ARM platform'
			, 'when'  => '"$a" eq "arm"'
			, 'range' => [ readfile('lxrconf.d/arm_plat_list.txt') ]
			}
		, 'avr32_mach' =>
			{ 'name'  => 'AVR32 machine'
			, 'when'  => '"$a" eq "avr32"'
			, 'range' => [ readfile('lxrconf.d/avr32_mach_list.txt') ]
			}
		, 'blackfin_mach' =>
			{ 'name'  => 'Blackfin machine'
			, 'when'  => '"$a" eq "blackfin"'
			, 'range' => [ readfile('lxrconf.d/blackfin_mach_list.txt') ]
			}
		, 'cris_arch' =>
			{ 'name'  => 'CRIS architecture'
			, 'when'  => '"$a" eq "cris"'
			, 'range' => [ readfile('lxrconf.d/cris_arch_list.txt') ]
			}
		, 'mn10300_proc' =>
			{ 'name'  => 'MN10300 processor'
			, 'when'  => '"$a" eq "mn10300"'
			, 'range' => [ readfile('lxrconf.d/mn10300_proc_list.txt') ]
			}
		, 'mn10300_unit' =>
			{ 'name'  => 'MN10300 unit'
			, 'when'  => '"$a" eq "mn10300"'
			, 'range' => [ readfile('lxrconf.d/mn10300_unit_list.txt') ]
			}
		, 'um_sys' =>
			{ 'name'  => 'UM system'
			, 'when'  => '"$a" eq "um"'
			, 'range' => [ readfile('lxrconf.d/um_sys_list.txt') ]
			}
		}

		  # Subdirectory subsection #
		  #=========================#

		# Directories to always ignore. These usually are the SCM's
		# private directories which possibly may contain non-public
		# project history.
	, 'ignoredirs' => ['CVSROOT', '.git']

		# Where to look for include files inside the sourcetree.
		# This is used to hyperlink to included files.
	, 'incprefix' =>	[ '/include'
						, '/arch/%=ARCH=%/include'
						, '/arch/%=ARCH=%/%=LVL2A=%/include'
						, '/arch/%=ARCH=%/%=LVL2B=%/include'
						]

		# Leave the %=xxx=% as is. They are needed by the 'maps' rule
		# and will be transformed into the appropriate subdir name.

		# These will translate the virtual #include path into the real path
		# if the target file exists.
	, 'maps' =>
			[ '^/arch/%=ARCH=%/'			=> '/arch/$a/'
			, '^/arch/arm/%=LVL2A=%/'		=> '/arch/arm/mach-${arm_mach}/'
			, '^/arch/arm/%=LVL2B=%/'		=> '/arch/arm/plat-${arm_plat}/'
			, '^/arch/avr32/%=LVL2A=%/'		=> '/arch/avr32/mach-${avr32_mach}/'
			, '^/arch/blackfin/%=LVL2A=%/'	=> '/arch/blackfin/mach-${blackfin_mach}/'
			, '^/arch/cris/%=LVL2A=%/'		=> '/arch/cris/arch-${cris_arch}/'
			, '^/arch/mn10300/%=LVL2A=%/'	=> '/arch/mn10300/proc-${mn10300_proc}/'
			, '^/arch/mn10300/%=LVL2B=%/'	=> '/arch/mn10300/unit-${mn10300_unit}/'
			, '^/arch/um/%=LVL2A=%/'		=> '/arch/um/arch-${um_sys}/'
			]

		  # Data storage subsection #
		  #=========================#

		# The DBI identifier for the database to use
		# For mysql, the format is dbi:mysql:dbname=<name>
		# for Postgres, it is dbi:Pg:dbname=<name>
		# for Oracle, it is dbi:Oracle:host=localhost;sid=DEVMMS;port=1521
	, 'dbname' => 'dbi:mysql:dbname=kernel'

		# If you need to specify the username or password for the database connection,
		# uncomment the following two lines
#	, 'dbuser'		=> 'lxr'
#	, 'dbpass'		=> 'foo'

		# If you need multiple lxr configurations in one database, set different table
		# prefixes for them.
#	, 'dbprefix' => 'lxr_'

		# For using glimpse, the directory to store the .glimpse files in is required
	, 'glimpsedir' => '/home/source/glimpse_databases/kernel'

		# Location of swish-e index database files if using swish-e
	, 'swishdir' => '/home/source/swish_databases/kernel'
	}
)
