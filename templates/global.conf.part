#- -*- mode: perl -*-
#- LXR master configuration file
#-	Global configuration section
#-
#-	This file fragment is meant to be "included" to form the
#-	complete configuration file.
#-
#-
#-		################################
#-		# Global configuration section #
#-		################################
#-
	{
		#
		# Master mode (where to find the tree name) #
		#===========================================#

		# Possible values are:
		#	- 'single'		single-tree context, no tree name (implicit)
		#	- 'host'		one host per tree
		#	- 'prefix'		generic host prefixed with tree name
		#	- 'section'		one section per tree (to be handled through symbolic
		#	          		                      links or duplication)
		#	- 'embedded'	tree name embedded in section path
		#	- 'argument'	first argument is tree name [PREFERRED]
		# CAUTION!
		#	Changing this parameter after initial configuration may
		#	require adjustements to other parameters!

#@CASE	%_routing%
#@N:
	  'routing' => 'single'
#@H:
	  'routing' => 'host'
#@P:
	  'routing' => 'prefix'
#@S:
	  'routing' => 'section'
#@E:
	  'routing' => 'embedded'
#@A:
	  'routing' => 'argument'
#@ENDC

		# Auxiliary tools subsection #
		#============================#
#@LOG Configuring auxiliary tool paths

		#- Place where lxr can write temporary files
	, 'tmpdir' => '/tmp'

		#- Define this OR the swish-e variable depending which search engine you want to use.
		#- Path to glimpse executables.
		#- e.g.: , 'glimpsebin'   => '/usr/local/bin/glimpse'
#@U	, 'glimpsebin'     => '%glimpse%'
#@U	, 'glimpseindex'   => '%glimpseindex%'
#@U	, 'glimpsedirbase' => '%glimpsedirbase%'
	, 'glimpseindexopts'	=>	'-o -n -B'	# "standard" options
			# You may use -b for a bigger (x4) index instead of -o
			# but there is no net advantage in query speed
			# Option -f causes incremental indexing, but it is
			# recommended to periodically run full indexing to
			# clean the index.
		#- Location of SWISH-E binary
		#- e.g.: , 'swishbin' => '/usr/local/bin/swish-e'
#@U	, 'swishbin'     => '%swish%'
#@U	, 'swishdirbase' => '%swishdirbase%'
		#- Location of the SWISH-E.conf file
	, 'swishconf' => '%LXRroot%/templates/swish-e.conf'

		#- Path to Exuberant Ctags executable
	, 'ectagsbin' => '%ctags%'
		#- Location of the ectags.conf file
	, 'ectagsconf' => '%LXRroot%/templates/ectags.conf'

		#- Paths for VCS storage modules
	, 'cvspath' => '/bin:/usr/local/bin:/usr/bin:/usr/sbin'
	, 'gitpath' => '/bin:/usr/local/bin:/usr/bin:/usr/sbin'
	, 'hgpath'  => '/bin:/usr/local/bin:/usr/bin:/usr/sbin'
	, 'svnpath' => '/bin:/usr/local/bin:/usr/bin:/usr/sbin'

		# Path to "magic" file to guess file content
		# CAUTION!
		#	This is a Fedora path; may be different under
		#	other distributions.
	# # # BUG # #Â #
	# A bug in File::MMagic version 1.27 prevents from using this
	# system magic file because it starts with a newline.
	# Parameter is commented out. Your alternate choice is:
	# 1) remove the initial offending empty lines,
	# 2) use another file without initial blank lines,
	# 3) default to the old magic file shipping with the release,
	# 4) work without any magic file to revert to internal tables.
#	, 'magicmime' => '/usr/share/misc/magic'

		# Computer DNS names subsection #
		#================================
#@IF	'H' ne "%_routing%" && 'P' ne "%_routing%"
#@	LOG Host name previously defined as %scheme%//%hostname%
	,	'host_names' =>	[ '%scheme%//%hostname%'
#@	ARRAY schemealiases,S hostaliases,A portaliases,P
#@		ON	none
			# Put here aliases for host name, such as
			#			, '//localhost'
			#			, 'https://192.168.1.1'
			#			, 'http://mycomputer.outside.domain:12345'
#@		ENDON
						, '%S%//%A%:%P%'
#@	ENDA
						]
#@ELSE

			# Specific host names are defined in tree sections
#@ENDIF

		# HTML subsection #
		#=================#
#@LOG Configuring HTML parameters

		# All paths in this subsection are relative to LXR root directory

		# Templates used for headers and footers
	, 'htmlfatal'		=> '%LXRroot%/templates/html/html-fatal.html'
#@MSG 'Buttons-and-menus' interface is recommended for the kernel
#@MSG to avoid screen cluttering.
#@ASK --- Use 'buttons-and-menus' instead of 'link' interface?; 1;yes, no; Y, N
#@IF	"%A%" eq 'Y'
	, 'htmlhead'		=> '%LXRroot%/templates/html/html-head-btn.html'
#@ELSE
	, 'htmlhead'		=> '%LXRroot%/templates/html/html-head.html'
#@ENDIF
	, 'htmltail'		=> '%LXRroot%/templates/html/html-tail.html'
	, 'htmldir'			=> '%LXRroot%/templates/html/html-dir-indexing.html'
		# If you do not need the "last indexed" column in directory
		# display (e.g. for a stable unchanging tree), erase the
		# '-indexing' suffix above.
	, 'htmlident'		=> '%LXRroot%/templates/html/html-ident.html'
	, 'htmlsearch'		=> '%LXRroot%/templates/html/html-search-%search_engine%.html'
	, 'htmlconfig'		=> '%LXRroot%/templates/html/html-config.html'
	, 'htmlperf'		=> '%LXRroot%/templates/html/html-perf.html'
	, 'perfrefreshhead'	=> '%LXRroot%/templates/html/refresh-head-btn-smaller.html'

		# Examples of head area customisation for source (listing file),
		# and sourcedir (displaying directory). Can be done for others
		# by creating a parameter '<script>head' or '<script>tail'
		# where <script> is source, sourcedir, diff (difference markup),
		# ident (identifier search), search (free-text search)
		# or perf (performance monitoring):
#	, 'sourcehead'		=> '%LXRroot%/templates/html/html-head.html'
#	, 'sourcedirhead'	=> '%LXRroot%/templates/html/html-head.html'

		# showconfig script is a bit special since "version" has
		# no meaning for it. Better to wipe out the 'variables' selection
		# links with an adequate header:
	, 'showconfighead'		=> '%LXRroot%/templates/html/config-head-btn-smaller.html'

		# Default character width of left version (for diff)
	, 'diffleftwidth'	=> 50

		# Default identifier search constraint (for ident)
#	, 'identdefonly'	=> 1

		# CSS style sheet
	, 'stylesheet'		=> 'templates/lxr.css'
	, 'alternate_stylesheet' => [ 'templates/classic.css' ]

		# Default character encoding
	, 'encoding'	=> 'utf-8'

		# File management subsection #
		#============================#
#@LOG Configuring file subsection

		# Which files should be excluded from indexing (and display).
	, 'ignorefiles' =>
		'^\\.|~$|\\.(o|a|orig)$|^CVS$|^core$'
		# Which extensions to treat as images when browsing.  If a file is an image,
		# it is displayed.
	, 'graphicfile' =>
		'bitmap|bmp|gif|icon?|jp2|jpe?g|pjpe?g|png|svg|tiff?|xbm|xpm'

		# Which file extensions are associated with which icon
		# Below is an example using 'Oxygen' theme available with KDE
		# small-icons/ is a symbolic link to
		#		 /usr/share/icons/oxygen/22x22/
		# (This location is valid for Fedora distributions,
		# check for others)
# 	, 'iconfolder' => 'small-icons/'
		# Don't forget the final / above.
# 	, 'icons' =>
#		{	'[gm]?awk'			=> 'mimetypes/application-x-awk.png'
#		,	'c|pc'				=> 'mimetypes/text-x-csrc.png'
# 		,	'h|hh'				=> 'mimetypes/text-x-chdr.png'
# 		,	'c\+\+|cc|cpp|cxx'	=> 'mimetypes/text-x-c++src.png'
# 		,	'hpp|hxx|h\+\+'		=> 'mimetypes/text-x-c++hdr.png'
# 		,	'java'				=> 'mimetypes/text-x-java.png'
# 		,	'js'				=> 'mimetypes/application-x-javascript.png'
#		,	'ma?k'				=> 'mimetypes/text-x-makefile.png'
# 		,	'plx?|pm|perl'		=> 'mimetypes/application-x-perl.png'
# 		,	'php3?|phtml'		=> 'mimetypes/application-x-php.png'
# 		,	'py|python|px'		=> 'mimetypes/text-x-python.png'
# 		,	'sh|ba?sh|ksh|zsh|m4' => 'mimetypes/text-x-script.png'
# 		,	's?html?'			=> 'mimetypes/text-html.png'
# 		,	'css'				=> 'mimetypes/text-css.png'
# 		,	'p|pas'				=> 'mimetypes/text-x-pascal.png'
# 		,	'patch'				=> 'mimetypes/text-x-patch.png'
# 		,	'pdf'				=> 'mimetypes/application-pdf.png'
# 		,	'sql|pk(s|b)'		=> 'mimetypes/text-x-sql.png'
# 		,	'rb|ruby'			=> 'mimetypes/application-x-ruby.png'
# 		,	'txt'				=> 'mimetypes/text-plain.png'
# 		,	'ui'				=> 'mimetypes/text-xml.png'
# 		,	'.*\~'				=> 'mimetypes/application-x-trash'
# 		}
# 	, 'graphicicon' => 'mimetypes/image-x-generic.png'
# 	, 'defaulticon' => 'mimetypes/unknown.png'
# 	, 'diricon'     => 'mimetypes/inode-directory.png'
#	, 'parenticon'  => 'actions/go-up.png'

		#- How to map files to languages
	, 'filetypeconf' => '%LXRroot%/templates/filetype.conf'

		#- Location of the Generic.pm config file
	, 'genericconf' => '%LXRroot%/lib/LXR/Lang/generic.conf'

		# "Common factor" subsection #
		#============================#
#@LOG Configuring "common factors"

		# In case your LXR installation controls several trees,
		# put here what you consider common parameters between
		# your source trees.
		# A parameter is "common" if its value is the same in every tree.
#@IF	%_shared%
#@	IF	'H' eq "%_routing%" || 'P' eq "%_routing%" || 'A' eq "%_routing%"
#@		IF	%_commonvirtroot%

		# Virtual root shared by all trees (or hosts)
	, 'virtroot' => '%virtrootbase%'
#@		ENDIF
#@	ENDIF
#@ENDIF
#@IF	'E' eq "%_routing%"

		# DEPRECATED tree name extraction from URL, since all
		# trees are usually served from the same physical server.
#@IF	'E' ne "%_routing%"
		# Meaningful only in multiple trees context. Example for
		# built-in method where tree id is last before script name
#	, 'treeextract' => '([^/]*)/[^/]*$'
#@ELSE
		# Built-in method where tree id is last before script name
	, 'treeextract' => '([^/]*)/[^/]*$'
#@	IF	'b' ne "%_virtrootpolicy%"
		##### REPLACE WITH YOUR OWN METHOD #####
#@	ENDIF
#@ENDIF
#@ENDIF

#@IF	!%_dbuser%
		# User name and password for DB access can be the same,
		# even if the database name is tree-specific.
#	, 'dbuser'		=> 'lxr'
#	, 'dbpass'		=> 'lxrpw'
#@ELSE
	, 'dbuser'		=> '%DB_user%'
	, 'dbpass'		=> '%DB_password%'
#@ENDIF	!%_dbuser%
#@IF	!%_dbprefix%
		# Table prefix is also a common parameter
		# unless you stuff all tree data in a single database.
		# It has a default hard-coded value:
#	, 'dbprefix'	=> 'lxr_'
#@ELSE
	, 'dbprefix'	=> '%DB_global_prefix%'
#@ENDIF	!%_dbprefix%
	}
