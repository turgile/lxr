#######################################################################
##
## LXR lighttpd server configuration
##
#######################################################################

#- Configuration for 'argument' tree designation (with common
#- virtual root) must be done only once to avoid duplicates.
#-
#@IF	'A' eq "%_routing%" && "%_commonvirtroot%"
	$HTTP["host"] == "%hostname%" {
#@	IF	'/' eq "%virtrootbase%"
		server.document-root = "%LXRroot%/"
#@	ELSE
		$HTTP["url"] =~ "^%virtrootbase%/" {
#@	ENDIF
			alias.url +=	("%virtrootbase%/" => "%LXRroot%/")
			cgi.assign +=	( "/source" => ""
							, "/ident" => ""
							, "/diff" => ""
							, "/search" => ""
							, "/showconfig" => ""
							)
#@	IF	'/' ne "%virtrootbase%"
		}
#@	ENDIF
	}
#@	ARRAY	hostaliases,H
#@		ON none
#	$HTTP["host"] == "alias_for_%hostname%" {
#@			IF	'/' eq "%virtrootbase%"
#		server.document-root = "%LXRroot%/"
#@			ELSE
#		$HTTP["url"] =~ "^%virtrootbase%/" {
#			alias.url +=	("%virtrootbase%/" => "%LXRroot%/")
#@			ENDIF
#			cgi.assign +=	( "/source" => ""
#							, "/ident" => ""
#							, "/diff" => ""
#							, "/search" => ""
#							, "/showconfig" => ""
#							)
#@			IF	'/' ne "%virtrootbase%"
#		}
#@			ENDIF
#	}
#@		ENDON
	$HTTP["host"] == "%H%" {
#@		IF	'/' eq "%virtroot%"
		server.document-root = "%LXRroot%/"
#@		ELSE
		$HTTP["url"] =~ "^%virtroot%/" {
			alias.url +=	("%virtroot%/" => "%LXRroot%/")
#@		ENDIF
			cgi.assign +=	( "/source" => ""
							, "/ident" => ""
							, "/diff" => ""
							, "/search" => ""
							, "/showconfig" => ""
							)
#@		IF	'/' ne "%virtroot%"
		}
#@		ENDIF
	}
#@	ENDA
#@ENDIF
#-
#-	Postponing macro expansion after tree description
#-	ensures all routing modes configuration can use
#-	the same variables with consistent values,
#-	notably variables which are set during tree
#-	definition.
#@PASS2 here_hosts
#@	IF	'A' ne "%_routing%" || !"%_commonvirtroot%"
#- - - - - - - -
#@		IF	'P' eq "%_routing%"
	$HTTP["host"] == "%treeid%.%hostname%" {
#@		ELSE
	$HTTP["host"] == "%hostname%" {
#@		ENDIF
#@		IF	'/' eq "%virtroot%"
		server.document-root = "%LXRroot%/"
#@			IF	'E' eq %_routing%
		$HTTP["url"] =~ "^/%treeid%/" {
			alias.url +=	("/%treeid%/" => "%LXRroot%/")
#@			ENDIF
#@		ELSE
		$HTTP["url"] =~ "^%virtroot%/" {
			alias.url +=	("%virtroot%/" => "%LXRroot%/")
#@			IF	'E' eq %_routing% && 'b' ne "%_virtrootpolicy%"
# . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
# IMPORTANT!	Fix the preceding alias.url directive and the
#				corresponding ones in the hostname alias blocks
#				to match your custom tree designation policy.
# . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
#@			ENDIF
#@		ENDIF
			cgi.assign +=	( "/source" => ""
							, "/ident" => ""
							, "/diff" => ""
							, "/search" => ""
							, "/showconfig" => ""
							)
#@		IF	'/' ne "%virtroot%" || 'E' eq "%_routing%"
		}
#@		ENDIF
	}
#@		IF	'H' eq "%_routing%"
# Duplicate the preceding conditional block for hostname aliases
#@		ELSE
#@			ARRAY	hostaliases,H
#@				ON none
#@					IF	'P' eq "%_routing%"
#	$HTTP["host"] == "%treeid%.%hostname%" {
#@					ELSE
#	$HTTP["host"] == "alias_for_%hostname%" {
#@					ENDIF
#@						IF	'/' eq "%virtroot%"
#		server.document-root = "%LXRroot%/"
#@						IF	'E' eq %_routing%
#		$HTTP["url"] =~ "^/%treeid%/" {
#			alias.url +=	("/%treeid%/" => "%LXRroot%/")
#@						ENDIF
#@					ELSE
#		$HTTP["url"] =~ "^%virtroot%/" {
#			alias.url +=	("%virtroot%/" => "%LXRroot%/")
#@					ENDIF
#			cgi.assign +=	( "/source" => ""
#							, "/ident" => ""
#							, "/diff" => ""
#							, "/search" => ""
#							, "/showconfig" => ""
#							)
#@					IF	'/' ne "%virtroot%" || 'E' eq "%_routing%"
#		}
#@					ENDIF
#	}
#@				ENDON
#@				IF	'P' eq "%_routing%"
	$HTTP["host"] == "%treeid%.%H%" {
#@				ELSE
	$HTTP["host"] == "%H%" {
#@				ENDIF
#@				IF	'/' eq "%virtroot%"
		server.document-root = "%LXRroot%/"
#@					IF	'E' eq %_routing%
		$HTTP["url"] =~ "^/%treeid%/" {
			alias.url +=	("/%treeid%/" => "%LXRroot%/")
#@					ENDIF
#@				ELSE
		$HTTP["url"] =~ "^%virtroot%/" {
			alias.url +=	("%virtroot%/" => "%LXRroot%/")
#@				ENDIF
			cgi.assign +=	( "/source" => ""
							, "/ident" => ""
							, "/diff" => ""
							, "/search" => ""
							, "/showconfig" => ""
							)
#@				IF	'/' ne "%virtroot%" || 'E' eq "%_routing%"
		}
#@				ENDIF
	}
#@			ENDA
#@		ENDIF
#@	ENDIF
#@ENDP2

#-
#-	Handle now the ports to listen to
#-
# # # # # # # # # # #
# CAUTION!
#	This script considers lighttpd listens by default on port :80
#	and does not list it to avoid duplicates. If port :80 is not
#	enabled and one of the hosts does not reference an explicit
#	port, a socket directive for port :80 must then be written.
# # # # # # # # # # #
#@IF	'H' eq "%_routing%"
# If incoming requests can arrive simultaneously on several ports,
# you can add blocks (one per port) of the form:
#	$HTTP["socket"] =~ ":XX$" {}	# with XX = port number
# IMPORTANT! Remove duplicates
#@ELSEIF	'P' eq "%_routing%"
#	- ports for //*.%hostname% and its aliases
#	  (do not uncomment if duplicate!)
#@	IF	80 != %port%
#	$HTTP["socket"] =~ ":%port%$" {}
#@	ENDIF
#@	ARRAY	portaliases,P
#@		IF	80 != %P%
#	$HTTP["socket"] =~ ":%P%$" {}
#@		ENDIF
#@	ENDA
#@ELSE
#@	IF	80 != %port%
# Primary port
	$HTTP["socket"] =~ ":%port%$" {}
#@	ENDIF
#@	ARRAY	portaliases,P
#@		ON	none
# If incoming requests can arrive simultaneously on several ports,
# you can add blocks (one per port) of the form:
#	$HTTP["socket"] =~ ":XX$" {}	# with XX = port number
# IMPORTANT! Remove duplicates
#@		ENDON
#@		ON prolog
# Alternate ports
# IMPORTANT! Remove duplicates
#@		ENDON
#@		IF	80 != %P%
	$HTTP["socket"] =~ ":%P%$" {}
#@		ENDIF
#@	ENDA
#@ENDIF
