                 L      X   X  RRRR
                 L      X   X  R   R
                 L       X X   R   R
                 L        X    RRRR
                 L       X X   R  R
                 L      X   X  R   R
                 LLLLL  X   X  R   R

                         LXR
     First time installation for a single source-tree
     -------------------------------------------------
(revised February 2016 for 2.1 release)
(revised November 2013 for 2.0 release)

These instructions are also available on the web site at
            http://lxr.sourceforge.net


Note: if you already know LXR, read file CHANGES for compatibility
====| issues (index database, configuration files, customised templates,
    | etc.).  Caution, this release introduces major changes in many
    | areas. It is highly recommended to reinstall from scratch

Note: do not forget to download the 200+ pages User's Manual which
====  covers many topics beyond first-time installation.



A/ Required tools
-----------------
The current version of the lxr depends on the following things:

1) Perl interpreter version 5.10 or later.  Installed by default in
   nearly all Linux distributions, but check the version number.

2) The exuberant ctags program version 5 or later.  Available  as a
   package in nearly all Linux distributions; otherwise download from
   http://sourceforge.net/projects/ctags

3) A relational database - MySQL 4.x/5.x (http://www.mysql.com), Postgresql
   (http://www.postgresql.org), SQLite (http://www.sqlite.org) and
   Oracle are supported.
   You will also need the right Perl DBI drivers for your particular database,
   usually available from CPAN.

4) A webserver
   - Apache httpd (http://httpd.apache.org/) with mod_perl and mod_version
     (http://perl.apache.org/) is recommended.  LXR works with Apache 1 and
     Apache 2.
   - lighttpd (http://www.lighttpd.net)
   - Cherokee (http://cherokee-project.com)
   - nginx    (http://nginx.org)
   - thttpd   (http://www.acme.com/software/thttpd)

5) For freetext searching, either Glimpse (http://webglimpse.net) or
   Swish-e (http://swish-e.org) version 2.1 or later.
   Swish-e is fully GPL'ed, while Glimpse is only free for
   non-commercial use.

6) The Perl database driver interface DBI and the relevant DBD driver for the
   database you're using.  If you don't already have these, they can be
   installed via CPAN.  See http://dbi.perl.org/index.html for more info.

7) The Perl File::MMagic module, available from CPAN

8) If using the CVS support, you will need rcs installed as well.

9) If you are using the BitKeeper support, you will need:
   BitKeeper (bk) installed
   Digest::SHA module (available from CPAN)
Note: BK integration is not maintained; it is frozen in its 2005 state
====  more or less. You're on your own.

Before attempting to load these resources directly (sometimes as source
you must compile and install), always poke the packages of your favorite
distribution to spare you pain and failures.


B/ Create lxr installation directory
------------------------------------
Expand the tarball in the LXR distribution into a directory of your
choice.  If you just want to have a try, expand in your home directory,
say /home/yourself/lxr.  If you want to install system-wide,
a good choice could be /usr/local/share/lxr so you would do

 cd ~
 tar -zxf /path/to/lxr/lxr-x.y.tgz
or
 cd /usr/local/share
 tar -zxf /path/to/lxr/lxr-x.y.tgz (as root or with appropriate permissions)

Then, get rid of the release number in the directory name and enter into it:

 mv lxr-x.y lxr
 cd lxr

At this point, the lxr directory should contain the following subdirectories:
  + custom.d : configuration data (created later by configuration script)
  + doc      : release documentation INSTALL, BUGS, CHANGES, ...
  + lib      : private LXR library (all subs and modules)
  + LXRimages: LXR graphic material (feel free to add inside)
  + scripts  : installation aids
  + templates: for conguring database, web server, LXR, composing output, ...
and the following files:
    diff, ident, search, source, showconfig : LXR engine
    genxref    : indexing script
    robots.txt : bot protection directives (only for well-behaved bots, sigh!)

You can check your computer configuration against LXR requirements running
the following command:

 ./genxref --checkonly

Output looks like:

    No URL specified - Continuing in checking mode
=>  [  OK  ]     Perl     version ... 5.14.2
    Parameter 'ectagsbin' not defined - trying to find ctags
    'ectagsbin' found at /usr/bin/ctags
    Manually update lxr.conf for permanent setting
=>  [  OK  ]     ctags    version ... 5.8
    Parameter 'glimpsebin' not defined - trying to find glimpse
    'glimpsebin' found at /usr/local/bin/glimpse
    Manually update lxr.conf for permanent setting
=>  Checked:    glimpse   version ... 4.18.5
    Parameter 'glimpseindex' not defined - trying to find glimpseindex
    'glimpseindex' found at /usr/local/bin/glimpseindex
    Manually update lxr.conf for permanent setting
=>  Checked: glimpseindex version ... 4.18.5
    Parameter 'swishbin' not defined - trying to find swish-e
=>  swish-e not found, `which swish-e` returned a null string
    genxref stopped without indexing by --checkonly option

Pay special attention to the lines marked => above (this marker does not appear
in the real output).  These lines tell you the tools version on your system
or the absence of a tool.

In the example above: Perl and ctags have correct versions, glimpse is
    installed but not swish-e.  This is acceptable since only one of them
    is needed.

If the diagnostic is good, proceed.  Otherwise, check your system and install
the missing utilities or upgrade to the required version.


C/ Configure LXR and the database
---------------------------------
Launch interactive configuration script configure-lxr.pl:

 ./scripts/configure-lxr.pl -vv

Notes: 1. All choices are case-insensitive.
=====| 2. You need only to type enough characters to make your choice
     |    unambiguous.
     | 3. The default answer (the one you get when hitting only the
     |    "return" key) is shown in UPPERCASE.
     | 4. "Open" questions are case-sensitive, of course.

C.1/ "Environment" and computer configuration

C.1.1/ It asks if LXR should be configured for single or multiple trees
       operation.  Answer s or m (case indifferent).

C.1.2/ It asks how LXR service is accessed through the web server: at root
       or lower in the URL hierarchy, host name and aliases. When in doubt
       about the kind of answer, read the User's Manual.

       Then, it will inquiry about the host name and its aliases.  You can
       record as many aliases as your need, e.g.:
	http://localhost
	//192.168.1.1
	//myPC.example.com

Note: You can omit the protocol if it is "http:". "https:" must be explicitly
====| specified if you want to use it.

C.1.3/ It asks for the database engine name.  Answer according to
       what is available on your computer.

C.1.4/ It requests a directory name for the auxiliary files of the free
       test search engine.

At this point, the script copies some templates from the 'templates' directory
to the configuration directory 'custom.d' and applies general customisation.

C.2/ Description of your source-tree.
Questions are usually self-explanatory and default answers are
appropriate in most cases.

This quick installation guide covers only the case of a source tree
stored in real files and directories (as opposed to a source tree stored
in a version control system -- VCS -- like CVS, Git, ...).

C.2.1/ Type of interface (buttons-and-menus or links): the former uses less
       screen space than the latter and is recommended for projects with
       numerous versions and/or many variables.

C.2.2/ Caption: this title is printed at the top of every page.

C.2.3/ Encoding is UTF-8 (Unicode) by default. Change it only for specific
       needs (Asian character sets for example)

C.2.4/ Answer f (or just hit "return") to "How is your tree stored?".
       Give the name of the "Source directory?"

Important note: LXR is aimed at comparing different versions of a source tree.
==============| It expects that the 'sourceroot' directory contains several
              | directories, each named after the version name:
              |
              | 'sourceroot' -+---- versionA -+---- file1.c
              |               |               +---- file2.c
              |               |               +---- file4.c
              |               |
              |               +---- versionB -+---- file1.c
              |                               +---- file3.c
              |                               +---- file4.c
              |
              | Therefore, if you have a single version, you must store it
              | in a dedicated directory.  You can't deposit your version
              | directly in the 'sourceroot' directory.

       The "Version names?" are the names of these subdirectories.

C.2.5/ Accept default answers until "Version enumeration method?" question.
       If you do not intend to change content of 'sourceroot' (i.e. you will
       not add other versions in the future), answer l (or just hit "return")
       and explicitly enumerate the version subdirectories, most recent first,
       oldest last.
       On the contrary, if you plan to add later other versions, answer fu (for
       "function") so that LXR will dynamically probe 'sourceroot' to discover
       the current versions. This way, you won't need to modify your
       configuration file when adding extra versions.
       The "Default displayed version"
       allows to preselect a given version on LXR activation.

C.2.6/ For this first installation, just hit "return" after "Directory to ignore?"
       and "Include directory?" questions.

C.2.7/ Give a name to the database and accept default answers for it.

If you asked for a multiple tree configuration, answer n to "Configure
for another tree?" to test the installation now (highly recommended if
this is your very first contact with LXR).

This is all for a simple installation.


D/ Initialise the database
-------------------------
Launch script initdb.sh:

 ./custom.d/initdb.sh

Note: This script was built by the previous step.  This why it is
====  executed from custom.d/ and not from scripts/.

PostgreSQL users: to guarantee a clean DB configuration, the script
================| tries first to delete the DB objects.  PostgreSQL
                | will emit warnig messages about non existent users,.
                | tables, functions, ...  Ignore them (only warnings,
                | not errors).


E/ Copy configuration file lxr.conf to its proper location
----------------------------------------------------------

 cp custom.d/lxr.conf .

Do not forget the final dot in this command.


F/ Generate index
-----------------
It is now time to generate the index. This is done using the program
"genxref". genxref takes two arguments --url= and --version= or three
arguments --url=, --treename= and --version= in multiple-trees context.

--url is equal to one of the URL used to access your tree, that is one of
      the 'host_names' followed by 'virtroot'.

--treename is equal to the answer to "Tree identification in URL?".

--version is the name of one of the versions as defined in
          { 'v' => { ... 'range' => [ ] ... } }
          It is also the name of a sub-directory in 'sourceroot'.

  ./genxref --url=http://localhost/lxr --treename=xxx --version=versionA

Note: You can drop the protocol if it is "http:" and have a shorter form:
====| ./genxref --url=//myPC.example.com/lxr --treename=xxx --version=versionA

You can also check that globally your configuration is correct with:

  ./genxref --url=http://localhost/lxr --treename=xxx --checkonly

Output looks like:
    [  OK  ]     Perl     version ... 5.14.2
    [  OK  ]     ctags    version ... 5.8
    Checked:    glimpse   version ... 4.18.5
    Checked: glimpseindex version ... 4.18.5
    Parameter 'swishbin' not defined - trying to find swish-e
    swish-e not found, `which swish-e` returned a null string
    genxref stopped without indexing by --checkonly option

If the last line reads:
    No matching configuration at ./genxref line 264, <CONFIG> line 1.

you mispelled --url, --treename or you made a mistake in 'host_names' or 'virtroot'.

It is VERY IMPORTANT that the --url argument be an URL.  Do not drop the //.

You can also use the --allversions argument to automatically index all
the versions defined in the versions variable.

It is recommended to use --reindexall option to make sure the data base will
not keep stray values from previous genxref executions:

  ./genxref --url=//localhost/lxr --treename=xxx --allversions --reindexall

Note: genxref can be a very slow process the first time it is run.
====| The User's Manual gives timings as measured on various machines.
    | Anyway, it is wise to experiment on a small tree first
    | and then to index versions individually.  According to the result,
    | you'll see if it is reasonable to use --allversions.
    | Some experimental results:
    |
    | source tree    650MHz-PIII-512MB  3.4GHz-i5-8GB
    | -----------    -----------------  -------------
    | LXR benchmark       4mn 55s            28s
    | kernel 3.1            N/A            1h 22mn

However, on future runs, if you don't use --reindexall, it will only index
changed files, thus speeding the process.


G/ Set up the webserver (Apache)
----------------------- ********
Step C above has copied a '.htaccess' into the LXR root directory.
It consists of two parts:

1- Access restriction to the LXR root directory
   Should only be modified if you want to allow wider access.

2- Script execution configuration
   It uses conditional directives to be valid in all known cases.

Step C also created an 'apache-lxrserver.conf' file which you must copy into
the /etc/httpd/conf.d directory to activate LXR service.

Note: if you have no /etc/httpd/conf.d directory, you must add the content
====| of lxrserver.conf to the end of /etc/httpd/conf/httpd.conf but this is
    | not recommended.

Apache 1.x specific: LXR Perl modules must be put into a known Perl library
   with mod_perl   | directory(typically site_perl).  Launch the following
===================| commands from the LXR root directory:
  cp -r lib/LXR/* /usr/lib/perl5/site_perl
                   | You may need root privileges to access/usr/lib/perl5

Ubuntu users *** IMPORTANT! ***
============ ******************
Module mod_version is not enabled by default.
To enable it, run the following commands:
   sudo a2enmod version
   sudo service apache2 restart

G/ Set up the webserver (lighttpd)
----------------------- **********
Step C above created a 'lighttpd-lxrserver.conf' in the custom.d directory.
It is based on a Fedora architecture.  So you must check that directory paths
are compatible with your installation.

Comment lines start with a pound sign (#).

The configuration file for LXR operation has been made independent from the
server master configuration. LXR service is now a "virtual host".

Check virtual host service is enabled in lighttpd master configuration file
/etc/lighttpd/lighttpd.conf. The last directive in this file must not be
commented out:

  include_shell "cat /etc/lighttpd/vhosts.d/*.conf"

LXR runs as a CGI application, check "plain old CGI" module is loaded at
start-up time. The following line in /etc/lighttpd/modules.conf, section
"CGI modules" must not be commented out:

  include "conf.d/cgi.conf"

Copy the customised configuration file where it belongs:

  cp custom.d/lighttpd/lighttpd-lxrserver.conf /etc/lighttpd/vhosts.d/

You can have lighttpd verify the global configuration with:

  lighttpd -t -f /etc/lighttpd/lighttpd.conf

If you pass the test, you are ready to launch lighttpd.
Uuse systemd to launch lighttpd:

  systemctl start lighttpd.service

If systemd is not available (older Linux distributions), a script
lighttpd-init is provided in scripts/. Launch it as:

  ./scripts/lighttpd-init start

lighttpd will daemonize and run in the background.
To stop:

  ./scripts/lighttpd-init stop

You may also copy this script as lighttpd in /etc/init.d

  cp scripts/lighttpd-init /etc/init.d/lighttpd

and define system-wide variable LIGHTTPD_CONF_PATH otherwise the
standard configuration file will be used.  If you already run a
lighttpd server, merging LXR into your configuration is left to
you as an exercise.

G/ Set up the webserver (Nginx)
----------------------- *******
Step C also created an 'nginx-lxrserver.conf' file which you must copy into
the /etc/nginx/conf.d directory to activate LXR service.

  cp custom.d/nginx-lxrserver.conf /etc/nginx/conf.d/

G/ Set up the webserver (Cherokee)
----------------------- **********
Cherokee must be manually configured. Instructions are given in the User's
Manual.

G/ Set up the webserver (thttpd)
----------------------- ********
Step C also created an 'thttpd-lxrserver.conf' file which you must copy into
the /etc/thttpd.conf directory to activate LXR service.

  cp custom.d/thttpd-lxrserver.conf /etc/thttpd.conf/

Note: multiple-trees context requires a special arrangement of LXR root
====| directory. Instructions for it are given in the User's Manual.

G/ Other webservers
-------------------

Most webservers should be capable of supporting the CGI script
versions of LXR - consult the server documentation for information on
how to configure this.

If you are using a webserver other than Apache, you need to provide
the following icons (unless you enable the 'iconfolder'/'icons' feature):

/icons/back.gif
/icons/folder.gif
/icons/c.gif
/icons/text.gif
/icons/compressed.gif
/icons/image2.gif
/icons/generic.gif

Gbis/ Security vs. web server
-----------------------------
Some security enhanced OSes like SELinux may bar access to your LXR
root directory if it is not located in /var/www.  If you encounter
such warnings or access denials, you must relabel the LXR directory
with command:

  chcon --reference /var/www/cgi-bin/ -R LXR_root_directory/


H/ Drink a cup of coffee (or tea if you prefer)
-----------------------------------------------
You went through the whole process.  Relax a bit and be prepared for the
ultimate bugs.


That's it - lxr should now work. Fire up your webbrowser and go to
http://localhost/lxr/source and you should see the listing for the top
of your source tree.

If you don't see the LXR page, check your Apache logs, especially the
error and access logs to see what's happening.  Problems are often
caused by the webserver not being able to access the LXR files - make
sure all the paths and file permissions are correct.


I/ Beyond simple installation
-----------------------------
Read the User's Manual for information on multiple trees, configuration
for Linux kernel VCS storage, customisation, performance tuning and many more.


Site-specific customisation
---------------------------

LXR has a large amount of flexibility in behaviour, allowing control
over many aspects of behaviour.

The places to look for customisation are:

- lxr.conf: controls most basic settings, including how filenames are
  mapped to languages, tab settings etc.

- custom.d: where you should copy every file before editing.
             Sources are:
    o templates/html/: Templates for the HTML display.  This is where
                       you can change how the website looks, e.g. by
                       adding site logos, links, ...
    o templates/lxr.css: CSS for HTML output. You can change colours,
                         fonts etc.
    o templates/ectags.conf: Advanced configuration for ectags when
                                parsing various language files - this is
                                one place to look if you want to add
                                support for another language.
    o lib/LXR/Lang/generic.conf: Configures the generic language support
                                 module that handles most of the
                                 languages LXR recognises.
                                 Configuration here enables support for
                                 new languages.
    o lib/Local.pm: various routines that may need to be customised to
                    provide useful file summaries in the directory and
                    file listing views.
- LXRimages: Graphic stuff, e.g. site logos.

How to deal with these is explained on the website http://lxr.sourceforge.net
and in the user's manual (separate download).


Getting help if it doesn't work:
--------------------------------
If you can't get LXR to work then have a look at the website.  Consult
the support forums or ask on the mailing list.  Do check the archives
of both first  - your question may already have been answered.

By web:    http://lxr.sourceforge.net/
By web:    http://sourceforge.net/p/lxr/discussion/?source=navbar
By email:  Send a mail to lxr-general@lists.sourceforge.net


Troubleshooting:
---------------
Common problems are listed on the http://lxr.sourceforge.net/en/troubleshooting.php page.
Only the most frequent for a first installation are mentioned here.

** Fatal: Couldn't open configuration file

The configuration file lxr.conf does not exist, is not in the LXR root
directory (it was left in the templates directory for instance) or cannot
be accessed (check the file permission: it must be "world" readable).

** Fatal: Can't find config for myTree

The value of the --url (or URL in your browser) matches none of the
'host-names'/'virtroot' combinations.  Check the spelling of the URL.

** Fatal: Can't create index xxx

This message is usually preceded by others about DB, lock or socket.  Check
the database description in lxr.conf and your access permissions to the
database.

** Fatal: Can't find database

This message comes from the DB backend. The likely cause is that the
webserver url passed to the browsing scripts does not match the url in
lxr.conf.  This means the configuration will not be found, and thus
the database will not be found

HTTP headers appearing in the html, or output not being interpreted as HTML

This can be caused by warning messages output before the script
outputs the right headers to tell the browser that the output is
HTML.  This can normally be solved by changing the value of $wwwdebug
to 0 in Common.pm.  But please report the warning message as a bug at
http://sourceforge.net/projects/lxr first!


Security advisory
-----------------
LXR ships with a very restrictive robots.txt for preventing (well-behaved
only) robots from crawling inside your site.  You may want to allow public
access.  Just change the name of the file.


Other sources of information
----------------------------
Read the manual available for download at SourceForge.  Browse the
http://lxr.sourceforge.net site.
