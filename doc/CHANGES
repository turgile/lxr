This file draws your attention on changes made for

        ==========================
        LXR 0.10  -->  LXR 0.11
        ==========================

This version begins reorganizing the root directory. As a user remarked, it is becoming a mess.
New subdirectories are created:

- doc: for release documentation
- lxrconf.d: all active configuration files go here
             as well as all user-customised templates
- LXRimages: all pics and graphic files
- scripts: shell scripts to ease installation
- templates: all models sorted in
	+ Apache  : files related to Apache web server configuration and operation
	+ html    : the traditional HTML templates
	+ initdb  : templates to create the databases
	+ lighttpd: files related to lighttpd web server configuration and
	            operation
	+(no dir) : assorted files which couldn't be stored in the above
	           directories

Should remain in the root directory only the main Perl script files
(to be accessed by the web server) and the final lxr.conf.


Support for fast switching between trees when multiple sources managed.

Reliable dynamic link reconfiguration when changing variable value
(think of 'version' and 'architecture').

Experimental support for lighttpd web server.

Browsed tree target determined independently from access port, but port
should still be configured in 'host_names' if you want a default applied
to generated links.

New script showconfig to display lxr.conf content and help diagnose
configuration issues.

Installation: new scripts to relieve some pain in configuring
============= web server and database.


Configuration files: if not modified, can be used from the templates
                     subdirectories; otherwise must be stored in
                     lxrconf.d directory

lxr.conf:*files controlled by scripts now use OS-absolute path form
--------  for better reliability; penalty: in the rare event you move
          your LXR root directory, configuration must be redone
          from start, unless you first tailored the template.
         *new parameters 'swishconf' (location was hard-coded!),
          'alternate_stylesheet'
         *new parameter 'filetypeconf' pointing to file/parser associations

generic.conf: reorganised so that future fiddling with supported
------------  languages will have no impact on existing databases
              (read: language id is guaranteed to remain fixed --
              unless ctags undergoes drastic changes, of course)

filetype.conf: new file; content was formerly inside lxr.conf but was
-------------  rarely modified, anyway by the end-user. This makes
               lxr.conf smaller and more easily manageable by end-user.


CSS class attribute name changes
Substitution marker name (in HTML templates) changes
												=> no impact
			(unless you developed your own templates and lxr.css)

        ==========================
        LXR 0.9.9  -->  LXR 0.10
        ==========================

This version contains new features.

The menus-and-buttons interface is considered mature enough to be offered for general release.

lxr.conf
--------
New and simpler way of entering the URL of your server with 'host_names'
'baseurl' and 'baseurl_aliases' kept for compatibility
												=> no impact (unless you want to use this new feature)
Custom icons may ve used in directory listing	=> no impact (unless you want to use this new feature)

lxr.css
-------
More class'es to fine grained control over display

Common.pm
---------
File was becoming too big -- split into Template.pm, Markup.pm and Common.pm
												=> no impact on indexing

templates/
----------
Template redesigned and new functions added		=> no impact unless you had custom templates
												=> no impact on indexing

html-ident-refs.html removed (now integrated in html-ident.html)
												=> update your customised lxr.conf
												=> no impact if using released lxr.conf
												=> no impact on indexing

ident and search scripts
-----     ------
Results are now presented in tabular form for better readability
												=> no impact on indexing

Languages
JavaScript and Ruby adde						=> re-index your tree


genxref script
-------
Tests added to detect trivial errors
  genxref step is done early in the installation/configuration process. This is the appropriate place to detect elementary errors. To see the tests result uncluttered, add --checkonly on the command line
												=> safer installation
												=> no impact on indexing

For up-to-date information, connect to http://lxr.sourceforge.net

        ==========================
        LXR 0.9.9  -->  LXR 0.9.10
        ==========================

This version is mainly a bug fix release.

Change in generic parser for string was too specific and could result in loss of synchronisation under certain circumstances (i.e. string interpreted as code and code considered as string). Thanks to users feed-back, C, C++, Perl and Python are validated.

It contains partial implementation of features announced for 0.10. DO NOT RELY on them, they are unstable.

For up-to-date information, connect to http://lxr.sourceforge.net

        =========================
        LXR 0.9.8  -->  LXR 0.9.9
        =========================

which could impact your existing trees.

If they result in an incompatibility, you must reindex your tree.

lxr.conf
--------
File restructured for more logical reading		=> no impact

Parameter 'graphicfile'
  More file extensions considered "graphic"		=> no impact on indexing
	May prevent indexing if extensions used for something non graphic;
	in that case, modify parameter
  Parameter now used both to tag file as graphic in directory listing
  and attempting to display it (consistency)	=> no impact on indexing
  Pattern simplified: match at end of file name now implicit
	May not give you what you expect if you used untypical pattern
	testing something in the middle of the file name.
	In that case, report as a bug or a feature request
	for general test on any part of the filename.

Parameter 'filetype'
  Default tab width changed for some languages	=> no impact on indexing
	Changes the appearance of source listing

New parameters 'treeextract' and 'encoding'		=> no impact on indexing

lxr.css and templates
---------------------
Many more class'es to give more control on appearance	=> no impact on indexing

New template html-fatal.html (error recovery)	=> no impact on indexing

Language parsing
----------------
Parser in SimpleParse.pm improved so as not to lose context
in languages with escape rules (such as C/C++ and Perl). As a
consequence captures more identifiers

Impact of change not validated outside C, C++ and Perl. Please
report any abnormal parsing, particularly regarding "escape"
sequences (think of \" in C-strings). Abnormal parsing means not
classifying correctly a fragment of file as comment, string, include
or code, or not giving it the correct extent, not missing an identifier.

(CAUTION: identifier recognition is first dependent on ctags
  capability during genxref step; thus a missed identifier
  may be the result of it unknown to the database and the
  parser cannot then be blamed.)

generic.conf
------------
File restructured								=> no impact on indexing

Syntax changed for language specification
  'langid' changed (but C and C++)				=> reindex if other languages
  new 'identdef' to define an identifier		=> no impact on indexing
	Gives you more control on what is an identifier and reserved keyword
  'spec' syntax changed
	May capture more identifiers
	If you made modifications, read manual before merging your
	changes; in particular, 'atom' rule may no longer be needed.
												=> reindex if deemed worth

find script
-----------
Removed find script and html-find.html template as they were no longer
integrated inside LXR and replaced by search.

No impact unless you customised find and want to merge your changes in
search and associated templates.